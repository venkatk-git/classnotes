{
  "title": "Virtual DOM in React",
  "author": "Venkat",
  "description": "Description \r",
  "body": {
    "raw": "\r\n# Virtual DOM in React\r\n- Reconciliation\r\n- React Fiber\r\n- Diffing Algorithm\r\n- How render works in React?\r\n\r\n## What is DOM?\r\n\r\nDocument Object Model aka DOM is how the browser represents the web page. It is a tree-like structure where each node represents a element.\r\n<CodeBlock>\r\nhtml\r\n|--head\r\n|  |--title\r\n|--body\r\n   |--div\r\n   |--h1\r\n   |--p\r\n</CodeBlock>\r\n\r\nJavascript provides an API to manipulate the DOM. If we want to change something in the DOM, we can use the API to do so. But, manipulating the DOM is expensive and slow.\r\nBecause, every time we change the DOM, the browser has to repaint the page and reflow the layout. This is where Virtual DOM comes into play.\r\n\r\n## Virtual DOM\r\nReact creates a virtual representation of the actual DOM. It is exactly like the actual DOM but it is a lightweight copy of the actual DOM it is an in-memory object.\r\n\r\n### Virtual DOM flow\r\n1. First time when the component is rendered, React creates a virtual DOM tree.\r\n2. If state change happens, React creates a new virtual DOM tree instance.\r\n3. React compares the new virtual DOM tree with the old virtual DOM tree. This process is called Reconcialiation. \r\nIn this process, React uses a diffing algorithm to find the difference between the two virtual DOM trees.\r\n4. Once the differences are found, React updates the actual DOM with the changes.\r\n\r\n## Advantages of Virtual DOM\r\n1. Since, Virtual DOM is not traversing through the whole DOM tree, it is faster.\r\n2. React can batch multiple updates and update the actual DOM in a single go.\r\n3. React only updates the part of DOM that has changed.\r\nOn the other hand, the actual DOM has to traverse through the whole tree to find the changes and update the DOM.\r\n\r\n\r\n<Note>\r\nReact never ever manipulates the DOM directly. Instead, it uses the Virtual DOM to update the actual DOM.\r\n</Note>\r\n\r\n## Reconciliation\r\n\r\n\r\n## React fiber\r\n\r\n\r\n## Diffing Algorithm\r\n\r\n\r\n## How render works in React?\r\n",
    "code": "var Component=(()=>{var m=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var D=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),M=(i,e)=>{for(var a in e)c(i,a,{get:e[a],enumerable:!0})},l=(i,e,a,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of f(e))!w.call(i,r)&&r!==a&&c(i,r,{get:()=>e[r],enumerable:!(t=p(e,r))||t.enumerable});return i};var b=(i,e,a)=>(a=i!=null?m(g(i)):{},l(e||!i||!i.__esModule?c(a,\"default\",{value:i,enumerable:!0}):a,i)),O=i=>l(c({},\"__esModule\",{value:!0}),i);var h=D((R,o)=>{o.exports=_jsx_runtime});var v={};M(v,{default:()=>u,frontmatter:()=>k});var n=b(h()),k={title:\"Virtual DOM in React\",author:\"Venkat\",description:\"Description\"};function s(i){let e={a:\"a\",h1:\"h1\",h2:\"h2\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",span:\"span\",ul:\"ul\",...i.components},{CodeBlock:a,Note:t}=e;return a||d(\"CodeBlock\",!0),t||d(\"Note\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h1,{id:\"virtual-dom-in-react\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#virtual-dom-in-react\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Virtual DOM in React\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Reconciliation\"}),`\n`,(0,n.jsx)(e.li,{children:\"React Fiber\"}),`\n`,(0,n.jsx)(e.li,{children:\"Diffing Algorithm\"}),`\n`,(0,n.jsx)(e.li,{children:\"How render works in React?\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"what-is-dom\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#what-is-dom\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"What is DOM?\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Document Object Model aka DOM is how the browser represents the web page. It is a tree-like structure where each node represents a element.\"}),`\n`,(0,n.jsx)(a,{children:(0,n.jsx)(e.p,{children:`html\\r\n|--head\\r\n|  |--title\\r\n|--body\\r\n|--div\\r\n|--h1\\r\n|--p`})}),`\n`,(0,n.jsx)(e.p,{children:`Javascript provides an API to manipulate the DOM. If we want to change something in the DOM, we can use the API to do so. But, manipulating the DOM is expensive and slow.\\r\nBecause, every time we change the DOM, the browser has to repaint the page and reflow the layout. This is where Virtual DOM comes into play.`}),`\n`,(0,n.jsxs)(e.h2,{id:\"virtual-dom\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#virtual-dom\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Virtual DOM\"]}),`\n`,(0,n.jsx)(e.p,{children:\"React creates a virtual representation of the actual DOM. It is exactly like the actual DOM but it is a lightweight copy of the actual DOM it is an in-memory object.\"}),`\n`,(0,n.jsxs)(e.h3,{id:\"virtual-dom-flow\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#virtual-dom-flow\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Virtual DOM flow\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"First time when the component is rendered, React creates a virtual DOM tree.\"}),`\n`,(0,n.jsx)(e.li,{children:\"If state change happens, React creates a new virtual DOM tree instance.\"}),`\n`,(0,n.jsx)(e.li,{children:`React compares the new virtual DOM tree with the old virtual DOM tree. This process is called Reconcialiation.\\r\nIn this process, React uses a diffing algorithm to find the difference between the two virtual DOM trees.`}),`\n`,(0,n.jsx)(e.li,{children:\"Once the differences are found, React updates the actual DOM with the changes.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"advantages-of-virtual-dom\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#advantages-of-virtual-dom\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Advantages of Virtual DOM\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Since, Virtual DOM is not traversing through the whole DOM tree, it is faster.\"}),`\n`,(0,n.jsx)(e.li,{children:\"React can batch multiple updates and update the actual DOM in a single go.\"}),`\n`,(0,n.jsx)(e.li,{children:`React only updates the part of DOM that has changed.\\r\nOn the other hand, the actual DOM has to traverse through the whole tree to find the changes and update the DOM.`}),`\n`]}),`\n`,(0,n.jsx)(t,{children:(0,n.jsx)(e.p,{children:\"React never ever manipulates the DOM directly. Instead, it uses the Virtual DOM to update the actual DOM.\"})}),`\n`,(0,n.jsxs)(e.h2,{id:\"reconciliation\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#reconciliation\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Reconciliation\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"react-fiber\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#react-fiber\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"React fiber\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"diffing-algorithm\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#diffing-algorithm\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Diffing Algorithm\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"how-render-works-in-react\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#how-render-works-in-react\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"How render works in React?\"]})]})}function u(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(s,{...i})}):s(i)}function d(i,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return O(v);})();\n;return Component;"
  },
  "_id": "react/virtual_dom.mdx",
  "_raw": {
    "sourceFilePath": "react/virtual_dom.mdx",
    "sourceFileName": "virtual_dom.mdx",
    "sourceFileDir": "react",
    "contentType": "mdx",
    "flattenedPath": "react/virtual_dom"
  },
  "type": "React",
  "slug": "/react/virtual_dom",
  "slugAsParams": "virtual_dom"
}