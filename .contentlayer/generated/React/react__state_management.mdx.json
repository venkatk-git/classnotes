{
  "title": "State Management in React",
  "author": "Venkat",
  "description": "Description\r",
  "body": {
    "raw": "\r\n# State & Props\r\nStates are mutable data that are used to render the UI. When the state changes, the component re-renders.\r\nProps are passed into the component.\r\nProps are immutable data that are used to render the UI. \r\n\r\n## Props Drilling\r\nProps Drilling is the process of passing props from a parent component to a child component. \r\nThis is a common pattern is React applications. \r\n\r\n## Context\r\nReact contexts are used to pass data through the component tree without having to pass props down manually at every level.\r\nWhen a state changes in the context, all the components that are subscribed to the context will re-render.\r\n\r\n## useReducer Hook\r\nThe `useReducer` hook is used to manage the state of a component. It is similar to the `useState` hook, but it is more powerful and flexible.\r\nThe `useReducer` hook takes two arguments: a reducer function and an initial state.\r\n\r\n## State Management Libraries\r\nThere are several state management libraries available in React. Some of the popular ones are:\r\n- Redux\r\n- Zustand\r\n\r\n## Redux\r\n\r\n## Zustand",
    "code": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var k=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),x=(a,e)=>{for(var t in e)r(a,t,{get:e[t],enumerable:!0})},o=(a,e,t,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of m(e))!g.call(a,i)&&i!==t&&r(a,i,{get:()=>e[i],enumerable:!(s=u(e,i))||s.enumerable});return a};var f=(a,e,t)=>(t=a!=null?p(b(a)):{},o(e||!a||!a.__esModule?r(t,\"default\",{value:a,enumerable:!0}):t,a)),N=a=>o(r({},\"__esModule\",{value:!0}),a);var l=k((w,c)=>{c.exports=_jsx_runtime});var R={};x(R,{default:()=>d,frontmatter:()=>L});var n=f(l()),L={title:\"State Management in React\",author:\"Venkat\",description:\"Description\"};function h(a){let e={a:\"a\",code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",p:\"p\",span:\"span\",ul:\"ul\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h1,{id:\"state--props\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#state--props\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"State & Props\"]}),`\n`,(0,n.jsx)(e.p,{children:`States are mutable data that are used to render the UI. When the state changes, the component re-renders.\\r\nProps are passed into the component.\\r\nProps are immutable data that are used to render the UI.`}),`\n`,(0,n.jsxs)(e.h2,{id:\"props-drilling\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#props-drilling\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Props Drilling\"]}),`\n`,(0,n.jsx)(e.p,{children:`Props Drilling is the process of passing props from a parent component to a child component.\\r\nThis is a common pattern is React applications.`}),`\n`,(0,n.jsxs)(e.h2,{id:\"context\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#context\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Context\"]}),`\n`,(0,n.jsx)(e.p,{children:`React contexts are used to pass data through the component tree without having to pass props down manually at every level.\\r\nWhen a state changes in the context, all the components that are subscribed to the context will re-render.`}),`\n`,(0,n.jsxs)(e.h2,{id:\"usereducer-hook\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#usereducer-hook\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"useReducer Hook\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"useReducer\"}),\" hook is used to manage the state of a component. It is similar to the \",(0,n.jsx)(e.code,{children:\"useState\"}),` hook, but it is more powerful and flexible.\\r\nThe `,(0,n.jsx)(e.code,{children:\"useReducer\"}),\" hook takes two arguments: a reducer function and an initial state.\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"state-management-libraries\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#state-management-libraries\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"State Management Libraries\"]}),`\n`,(0,n.jsx)(e.p,{children:\"There are several state management libraries available in React. Some of the popular ones are:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Redux\"}),`\n`,(0,n.jsx)(e.li,{children:\"Zustand\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"redux\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#redux\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Redux\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"zustand\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#zustand\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Zustand\"]})]})}function d(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return N(R);})();\n;return Component;"
  },
  "_id": "react/state_management.mdx",
  "_raw": {
    "sourceFilePath": "react/state_management.mdx",
    "sourceFileName": "state_management.mdx",
    "sourceFileDir": "react",
    "contentType": "mdx",
    "flattenedPath": "react/state_management"
  },
  "type": "React",
  "slug": "/react/state_management",
  "slugAsParams": "state_management"
}